# handlers/chat.py
from datetime import datetime
from telebot import TeleBot, types
from database.models import Order, User, OrderMessage, Attachment, UserRole


def register_chat_handlers(bot: TeleBot):

    # ---------- –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç ----------
    @bot.callback_query_handler(func=lambda c: c.data.startswith("open_chat:"))
    def cb_open_chat(call: types.CallbackQuery):
        bot.answer_callback_query(call.id)
        try:
            order_id = int(call.data.split(":", 1)[1])
        except Exception:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞—è–≤–∫–∏.")
            return

        order = Order.get_or_none(Order.id == order_id)
        if not order:
            bot.answer_callback_query(call.id, "‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        bot.send_message(
            call.message.chat.id,
            f"üí¨ –ß–∞—Ç –ø–æ –∑–∞—è–≤–∫–µ #{order.id}.\n"
            f"–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏.\n"
            f"–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ ‚Äî –Ω–∞–∂–º–∏ ‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å /stop."
        )

        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ state, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –≤ —á–∞—Ç
        bot.set_state(call.from_user.id, "chatting", call.message.chat.id)
        # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º order_id –≤ state —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
            data["order_id"] = order.id

    # ---------- –°–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ ----------
    @bot.message_handler(state="chatting", content_types=["text", "photo", "document"])
    def chat_message(message: types.Message):
        # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ state —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç (—ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É TypeError)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            order_id = data.get("order_id")

        if not order_id:
            bot.send_message(message.chat.id, "‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏–≤—è–∑–∫–∞ –∫ –∑–∞—è–≤–∫–µ. –ó–∞–≤–µ—Ä—à–∞—é —á–∞—Ç.")
            try:
                bot.delete_state(message.from_user.id, message.chat.id)
            except Exception:
                pass
            return

        # –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É
        text_lower = (message.text or "").strip().lower() if message.content_type == "text" else ""
        if text_lower in ("‚¨ÖÔ∏è –Ω–∞–∑–∞–¥".lower(), "/stop", "/exit", "–≤—ã–π—Ç–∏"):
            bot.delete_state(message.from_user.id, message.chat.id)
            bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞.", reply_markup=None)
            return

        user = User.get_or_none(User.tg_id == message.from_user.id)
        if not user:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            bot.delete_state(message.from_user.id, message.chat.id)
            return

        order = Order.get_or_none(Order.id == order_id)
        if not order:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –∑–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–≤–µ—Ä—à–∞—é —á–∞—Ç.")
            bot.delete_state(message.from_user.id, message.chat.id)
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ + –≤–ª–æ–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        saved_text = None
        # —Ñ–∞–π–ª/—Ñ–æ—Ç–æ
        if message.content_type == "photo" or message.content_type == "document":
            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º Attachment (—Ñ–∞–π–ª)
            if message.photo:
                file_id = message.photo[-1].file_id
                file_type = "image"
            else:
                file_id = message.document.file_id
                mt = (message.document.mime_type or "").lower()
                file_type = "image" if mt.startswith("image/") else "document"

            caption = getattr(message, "caption", None)
            # —Å–æ–∑–¥–∞—ë–º attachment
            try:
                Attachment.create(
                    order=order,
                    uploaded_by=user,
                    file_id=file_id,
                    file_type=file_type,
                    caption=caption
                )
            except Exception as e:
                # –ª–æ–≥–∏—Ä—É–µ–º/—Å–æ–æ–±—â–∞–µ–º, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
                bot.send_message(message.chat.id, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏–µ: {e}")

            saved_text = caption or "[–í–ª–æ–∂–µ–Ω–∏–µ]"
            # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º-–æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
            OrderMessage.create(order=order, sender=user, message=saved_text)

        else:
            # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            saved_text = (message.text or "").strip()
            OrderMessage.create(order=order, sender=user, message=saved_text)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è(–µ–π): –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ
        recipients = []
        if user.role == int(UserRole.DRIVER):
            # –æ—Ç –≤–æ–¥–∏—Ç–µ–ª—è ‚Äî –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
            if order.dispatcher and order.dispatcher.tg_id:
                recipients.append(order.dispatcher.tg_id)
        elif user.role == int(UserRole.DISPATCHER):
            # –æ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ‚Äî –≤–æ–¥–∏—Ç–µ–ª—é
            if order.driver and order.driver.tg_id:
                recipients.append(order.driver.tg_id)
        else:
            # –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–ª–∏ –¥—Ä—É–≥–æ–µ ‚Äî –º–æ–∂–Ω–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –æ–±–æ–∏–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            if order.dispatcher and order.dispatcher.tg_id:
                recipients.append(order.dispatcher.tg_id)
            if order.driver and order.driver.tg_id:
                recipients.append(order.driver.tg_id)

        if not recipients:
            bot.send_message(message.chat.id, "‚ùå –í—Ç–æ—Ä–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç tg_id"
                                              " ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏.")
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ(—è) –ø–æ–ª—É—á–∞—Ç–µ–ª—é(—è–º)
        for tg in set(recipients):
            try:
                bot.send_message(
                    tg,
                    f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–µ #{order.id} –æ—Ç {user.first_name or '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}:\n{saved_text}"
                )
            except Exception:
                bot.send_message(message.chat.id,  "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                pass

        # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é

    # ---------- –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π ----------
    @bot.callback_query_handler(func=lambda c: c.data.startswith("request_history:"))
    def cb_request_history(call: types.CallbackQuery):
        bot.answer_callback_query(call.id)
        try:
            order_id = int(call.data.split(":", 1)[1])
        except Exception:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞—è–≤–∫–∏.")
            return

        order = Order.get_or_none(Order.id == order_id)
        if not order:
            bot.answer_callback_query(call.id, "‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        msgs = (
            OrderMessage
            .select()
            .where(OrderMessage.order == order)
            .order_by(OrderMessage.created_at)
        )

        if not msgs:
            bot.send_message(call.message.chat.id, f"üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ #{order.id} –ø—É—Å—Ç–∞.")
            return

        history_lines = [f"üìã –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∑–∞—è–≤–∫–µ #{order.id}:\n"]
        for m in msgs:
            sender_name = (m.sender.first_name if m.sender else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            ts = m.created_at.strftime("%d.%m %H:%M") if getattr(m, "created_at", None) else ""
            text = m.message or "[–≤–ª–æ–∂–µ–Ω–∏–µ]"
            history_lines.append(f"[{ts}] {sender_name}: {text}")

        # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –±–æ–ª—å—à–∞—è ‚Äî –º–æ–∂–Ω–æ —Ä–∞–∑–±–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–∏; –ø–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏–º –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        bot.send_message(call.message.chat.id, "\n".join(history_lines))