from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from app.database.models import Order, OrderStatus
from telebot import types




# ===================== –°–ü–ò–°–ö–ò –ü–û –°–¢–ê–¢–£–°–ê–ú (4 –ö–ù–û–ü–ö–ò) =====================
def get_status_filter_keyboard() -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboard —Å 4 –∫–Ω–æ–ø–∫–∞–º–∏ —Å–ø–∏—Å–∫–æ–≤:
    - –≤—Å–µ –Ω–æ–≤—ã–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ (–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ), –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ.
    """
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton("üÜï –í—Å–µ –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏", callback_data="list_status:NEW"),
        InlineKeyboardButton("‚úÖ –í—Å–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="list_status:CONFIRMED"),
        InlineKeyboardButton("üì¶ –í—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="list_status:DELIVERED"),
        InlineKeyboardButton("‚ùå –í—Å–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="list_status:CANCELLED"),
    )
    return kb


# keyboards/request_actions.py

#
# def get_driver_status_keyboard(order):
#     markup = types.InlineKeyboardMarkup(row_width=1)
#
#     # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
#     if order.status == int(OrderStatus.CONFIRMED):
#         markup.add(
#             types.InlineKeyboardButton("üöõ –í –ü—É—Ç–∏",
#                                        callback_data=f"driver_set_status:{order.id}:{int(OrderStatus.ENROUTE)}")
#         )
#     elif order.status == int(OrderStatus.ENROUTE):
#         markup.add(
#             types.InlineKeyboardButton("üì¶ –ù–∞ –∑–∞–≥—Ä—É–∑–∫–µ",
#                                        callback_data=f"driver_set_status:{order.id}:{int(OrderStatus.LOADING)}")
#         )
#     elif order.status == int(OrderStatus.LOADING):
#         markup.add(
#             types.InlineKeyboardButton("üöõ –í –ø—É—Ç—å –Ω–∞ –≤—ã–≥—Ä—É–∑–∫—É",
#                                        callback_data=f"driver_set_status:{order.id}:{int(OrderStatus.ENROUTE_TO_LOADING)}"),
#             types.InlineKeyboardButton("‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ",
#                                        callback_data=f"driver_set_status:{order.id}:{int(OrderStatus.DELIVERED)}")
#         )
#
#     markup.add(types.InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"driver_cancel:{order.id}"))
#     return markup

def get_prefix_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∑–∞—è–≤–∫–∏"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add(
        KeyboardButton('—Å –ù–î–°'),
        KeyboardButton('–±–µ–∑ –ù–î–°'),
        KeyboardButton('–Ω–∞–ª')
    )
    markup.add(KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))
    return markup


def get_drivers_keyboard(drivers):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–¥–∏—Ç–µ–ª—è"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

    for driver in drivers:
        btn_text = f"{driver.first_name} {driver.last_name or ''}"
        if driver.username:
            btn_text += f" (@{driver.username})"
        markup.add(KeyboardButton(btn_text))

    markup.add(KeyboardButton('‚ùå –ë–µ–∑ –≤–æ–¥–∏—Ç–µ–ª—è'), KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))
    return markup


def get_request_status_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    markup.add(
        KeyboardButton('üÜï –ù–æ–≤–∞—è'),
        KeyboardButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'),
        KeyboardButton('üöõ –í –ø—É—Ç–∏'),
        KeyboardButton('üì¶ –ù–∞ –∑–∞–≥—Ä—É–∑–∫–µ'),
        KeyboardButton('‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ'),
        KeyboardButton('‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞')
    )
    markup.add(KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥'), KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∞'))
    return markup

# keyboards/request_actions.py
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from database.models import OrderStatus

def get_request_actions_keyboard(order, role="dispatcher", include_chat: bool = True):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –¥–ª—è —Ä–æ–ª–∏.
    """
    markup = InlineKeyboardMarkup(row_width=2)

    if role == "dispatcher":
        # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        markup.add(
            InlineKeyboardButton("üìç –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ—á–∫—É –ê", callback_data=f"edit_from:{order.id}"),
            InlineKeyboardButton("üìç –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ—á–∫—É –ë", callback_data=f"edit_to:{order.id}"),
        )
        markup.add(
            InlineKeyboardButton("üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É/–≤—Ä–µ–º—è", callback_data=f"edit_dt:{order.id}"),
            InlineKeyboardButton("üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data=f"edit_comment:{order.id}"),
        )
        markup.add(
            InlineKeyboardButton("üì¶ –¢–∏–ø –≥—Ä—É–∑–∞", callback_data=f"edit_cargo:{order.id}"),
            InlineKeyboardButton("‚öñÔ∏è –í–µ—Å/–æ–±—ä–µ–º", callback_data=f"edit_weight:{order.id}"),
        )

        # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—è
        markup.add(
            InlineKeyboardButton("üë®‚Äçüíº –ù–∞–∑–Ω–∞—á–∏—Ç—å/—Å–º–µ–Ω–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è", callback_data=f"assign_driver:{order.id}")
        )

        # –û—Ç–º–µ–Ω–∞ ‚Äî –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–æ–≤—ã–π/–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
        if order.status in (int(OrderStatus.NEW), int(OrderStatus.CONFIRMED)):
            markup.add(
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_request:{order.id}")
            )

    elif role == "driver":
        # –í–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
        # –î–ª—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ - –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è
        if order.status == int(OrderStatus.NEW):
            markup.add(
                types.InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"driver_accept:{order.id}")
            )
        # –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ - –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        elif order.status not in [int(OrderStatus.DELIVERED), int(OrderStatus.CANCELLED)]:
            markup.add(
                types.InlineKeyboardButton("üìã –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data=f"driver_change_status:{order.id}"),
                types.InlineKeyboardButton("üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data=f"driver_add_comment:{order.id}")
            )
            markup.add(
                types.InlineKeyboardButton("üì∏ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ", callback_data=f"driver_add_photo:{order.id}")
            )

        if order.status == int(OrderStatus.CONFIRMED):
            markup.add(
                InlineKeyboardButton("üöõ –í –ø—É—Ç—å", callback_data=f"start_driving:{order.id}")
            )
        elif order.status == int(OrderStatus.ENROUTE):
            markup.add(
                InlineKeyboardButton("‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", callback_data=f"delivered:{order.id}")
            )
    elif user_role == 'manager':
        markup.add(
                    InlineKeyboardButton('üë®‚Äçüíº –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å', callback_data=f'reassign_driver:{order.id}'),
                    InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel_request:{order.id}')
                )
        if request_status == 'delivered':
            markup.add(InlineKeyboardButton('üìä –ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data=f'request_details:{order.id}'))

    # üí¨ –ß–∞—Ç –∏ üïò –ò—Å—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –≤–æ–¥–∏—Ç–µ–ª—é, –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
    if include_chat:
        markup.add(
            InlineKeyboardButton("üí¨ –ß–∞—Ç", callback_data=f"open_chat:{order.id}"),
            InlineKeyboardButton("üïò –ò—Å—Ç–æ—Ä–∏—è", callback_data=f"request_history:{order.id}"),
        )

    return markup

# def get_request_actions_keyboard(order, user_role):
#     """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞—è–≤–∫–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ä–æ–ª–∏"""
#     markup = InlineKeyboardMarkup(row_width=2)
#     request_status = order.status
#
#     if user_role == 'dispatcher':
#         if request_status in ['new', 'confirmed']:
#             markup.add(
#                 InlineKeyboardButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'edit_request:{order.id}'),
#                 InlineKeyboardButton('üë®‚Äçüíº –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è', callback_data=f'assign_driver:{order.id}')
#             )
#         if request_status == 'new':
#             markup.add(InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel_request:{order.id}'))
#
#     elif user_role == 'driver':
#         if request_status == 'assigned':
#             markup.add(
#                 InlineKeyboardButton('‚úÖ –ü—Ä–∏–Ω—è—Ç—å', callback_data=f'accept_request:{order.id}'),
#                 InlineKeyboardButton('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'reject_request:{order.id}')
#             )
#         elif request_status == 'confirmed':
#             markup.add(
#                 InlineKeyboardButton('üöõ –í –ø—É—Ç—å', callback_data=f'start_driving:{order.id}'),
#                 InlineKeyboardButton('üì¶ –ù–∞ –∑–∞–≥—Ä—É–∑–∫–µ', callback_data=f'loading:{order.id}')
#             )
#         elif request_status == 'loading':
#             markup.add(InlineKeyboardButton('üöõ –í –ø—É—Ç—å', callback_data=f'start_driving:{order.id}'))
#         elif request_status == 'in_transit':
#             markup.add(InlineKeyboardButton('‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', callback_data=f'delivered:{order.id}'))
#
#     elif user_role == 'manager':
#         markup.add(
#             InlineKeyboardButton('üë®‚Äçüíº –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å', callback_data=f'reassign_driver:{order.id}'),
#             InlineKeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel_request:{order.id}')
#         )
#         if request_status == 'delivered':
#             markup.add(InlineKeyboardButton('üìä –ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data=f'request_details:{order.id}'))
#
#     # –î–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π
#     markup.add(
#         InlineKeyboardButton('üí¨ –ß–∞—Ç', callback_data=f'open_chat:{order.id}'),
#         InlineKeyboardButton('üìã –ò—Å—Ç–æ—Ä–∏—è', callback_data=f'request_history:{order.id}')
#     )
#
#     return markup


def get_confirmation_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π"""
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(
        InlineKeyboardButton('‚úÖ –î–∞', callback_data='confirm_yes'),
        InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='confirm_no')
    )
    return markup


def get_request_filter_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–æ–∫"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    markup.add(
        KeyboardButton('üÜï –ù–æ–≤—ã–µ'),
        KeyboardButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ'),
        KeyboardButton('üöõ –í –ø—É—Ç–∏')

    )
    markup.add(
        KeyboardButton('üì¶ –ù–∞ –∑–∞–≥—Ä—É–∑–∫–µ'),
        KeyboardButton('‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ'),
        KeyboardButton('‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ')
    )
    markup.add(
        KeyboardButton('üìÖ –°–µ–≥–æ–¥–Ω—è'),
        KeyboardButton('üìÜ –ù–µ–¥–µ–ª—è'),
        KeyboardButton('üìä –í—Å–µ')
    )
    markup.add(KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥'))
    return markup
